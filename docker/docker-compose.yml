services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - bookify_default

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    command:
      - sh
      - -c
      - |
        sleep 30
        apt-get update && apt-get install -y kafka && /etc/confluent/docker/run
        /etc/confluent/docker/run
        /usr/bin/kafka-topics --bootstrap-server kafka:9092 --create --topic input-topic --replication-factor 1 --partitions 1 &&
        /usr/bin/kafka-topics --bootstrap-server kafka:9092 --create --topic output-topic --replication-factor 1 --partitions 1 &&
        /etc/confluent/docker/run
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - bookify_default

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9102:9100"
    networks:
      - bookify_default

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    ports:
      - "9308:9308"
    environment:
      KAFKA_URI: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - 'sleep 60 && /bin/kafka_exporter'
    networks:
      - bookify_default

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - bookify_default

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - bookify_default

  api-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: api-server
    ports:
      - "8000:8000"
    networks:
      - bookify_default

  locust:
    build:
      context: ..
      dockerfile: docker/Dockerfile.locust
    container_name: locust
    depends_on:
      - api-server
    networks:
      - bookify_default
    ports:
      - "8089:8089"

volumes:
  grafana-storage:

networks:
  bookify_default:
    driver: bridge
